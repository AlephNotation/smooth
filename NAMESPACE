import(zoo, Rcpp)
importFrom("nloptr", nloptr)
importFrom("graphics",abline,layout,legend,lines,par,plot,points,polygon)
importFrom("stats",AIC,BIC,cov,dbeta,decompose,deltat,end,frequency,is.ts,median,coef,optim,nlminb,
           cor,qnorm,qt,qlnorm,quantile,rbinom,rlnorm,rnorm,rt,runif,start,time,ts,var,simulate,nobs,logLik,
           lm,as.formula,residuals,plnorm,pnorm,optimize)
importFrom("utils", packageVersion)
export(es, ges, ces, ssarima, iss, sma, auto.ces, auto.ssarima)
export(sim.es, sim.ssarima, sim.ces)
export(sowhat, MPE, MAPE, SMAPE, MASE, RelMAE, sMSE, hm, cbias, sPIS, sCE)
export(graphmaker, forecast, forecast.smooth, AICc, orders, lags, model.type, stepwise)

S3method(logLik,smooth)
S3method(logLik,smooth.sim)
S3method(logLik,iss)
S3method(nobs,smooth)
S3method(nobs,smooth.sim)
S3method(nobs,iss)
S3method(AICc,default)
S3method(coef,smooth)
S3method(fitted,smooth)
S3method(forecast,smooth)
S3method(lags,default)
S3method(lags,Arima)
S3method(model.type,default)
S3method(orders,default)
S3method(orders,Arima)
S3method(plot,smooth)
S3method(plot,smooth.sim)
S3method(plot,smooth.forecast)
S3method(plot,iss)
S3method(print,smooth)
S3method(print,smooth.sim)
S3method(print,smooth.forecast)
S3method(print,iss)
S3method(simulate,smooth)
S3method(summary,smooth)
S3method(summary,smooth.forecast)
S3method(summary,iss)

useDynLib(smooth, .registration=TRUE, .fixes="smooth_")
